{"version":3,"sources":["components/popupWithForm.js","components/ImagePopup.js","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","images/Vector.svg"],"names":["PopupWithForm","props","className","isOpen","name","onSubmit","type","onClick","close","title","children","btnText","ImagePopup","card","class","src","link","alt","Header","logo","api","options","this","baseUrl","token","headers","authorization","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","func","about","avatar","method","body","JSON","stringify","cardId","user","item","myLike","likes","find","currentUser","index","array","_id","splice","push","querySelector","textContent","length","classList","toggle","url","Card","id","handleCardClick","onConfirmDelete","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserData","getInitialCards","reverse","map","Footer","App","isConfirmPopupOpen","setIsConfirmPopupOpen","isAvatarPopupOpen","setIsAvatarPopupOpen","isProfilePopupOpen","setIsProfilePopupOpen","isAddPopupOpen","setIsAddPopupOpen","selectedCard","setSelectedCard","isOpenImage","setIsOpenImage","closeAllPopups","placeholder","tabindex","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.242ec5c1.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <section className={props.isOpen ? \"popup popup_active\" : \"popup \"}>\r\n      <form\r\n        name={props.name}\r\n        className={`popup__form popup__form_${props.name}`}\r\n        onSubmit={props.onSubmit}\r\n      >\r\n        <button\r\n          className=\"popup__toggle\"\r\n          type=\"button\"\r\n          onClick={props.close}\r\n        />\r\n        <h3 className=\"popup__title\">{props.title}</h3>\r\n        {props.children}\r\n        <button type=\"submit\" className=\"popup__button\">\r\n          {props.btnText}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\nfunction ImagePopup({ card, close}) {\r\n\r\n  return (\r\n    <section class={`popup popup_review ${(typeof (card) == 'boolean') ? '' : 'popup_active'}`}>\r\n      <figure class=\"popup__figure\">\r\n        <button\r\n          class=\"popup__toggle  popup__toggle_review\"\r\n          type=\"button\"\r\n          onClick={close}\r\n        />\r\n        <img class=\"popup__image\" src={card.link} alt={card.name} />\r\n        <figcaption class=\"popup__subtitle\">{card.name}</figcaption>\r\n\r\n      </figure>\r\n    </section>\r\n  );\r\n}\r\nexport default ImagePopup;\r\n","import React from \"react\";\r\nimport logo from \"../images/Vector.svg\";\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Лого\" />\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","class Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.token = options.headers.authorization;\r\n  }\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      headers: {\r\n        authorization: this.token,\r\n      },\r\n    }).then((res) => {\r\n      if (res.ok) return res.json();\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getUserData(func) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: {\r\n        authorization: this.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .then((res) => {\r\n        func(res.name, res.about, res.avatar);\r\n        return res;\r\n      });\r\n  }\r\n\r\n  saveUserData({ name, about }) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then((res) => {\r\n      if (!res.ok) return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  saveCardData({ name, link }) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then((res) => {\r\n      if (!res.ok) return Promise.reject(`Ошибка: ${res.status}`);\r\n      return res.json();\r\n    });\r\n  }\r\n\r\n  deleteCardData(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  }\r\n\r\n  likeCard(user, item, card) {\r\n    const myLike = item.likes.find((currentUser, index, array) => {\r\n      if (currentUser._id === user._id) array.splice(index, 1);\r\n      return currentUser._id === user._id;\r\n    });\r\n    if (!myLike) item.likes.push(user);\r\n    return fetch(`${this.baseUrl}/cards/likes/${item._id}`, {\r\n      method: myLike ? \"DELETE\" : \"PUT\",\r\n      headers: {\r\n        authorization: this.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (!res.ok) return Promise.reject(`Ошибка: ${res.status}`);\r\n      res.json().then((res) => {\r\n        card.querySelector(\".elements__like-counter\").textContent =\r\n          res.likes.length;\r\n        card\r\n          .querySelector(\".elements__button\")\r\n          .classList.toggle(\"elements__button_active\");\r\n      });\r\n    });\r\n  }\r\n\r\n  changeAvatar(url) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: url.link,\r\n      }),\r\n    }).then((res) => {\r\n      if (!res.ok) return Promise.reject(`Ошибка: ${res.status}`);\r\n      return res.json();\r\n    });\r\n  }\r\n}\r\n\r\n//Экземпляр класса Api\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-13\",\r\n  headers: {\r\n    authorization: \"a34a1e6b-d078-470d-87dd-2211c9e10f70\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\nexport default api;","import React from 'react';\r\nfunction Card({ card, name, id, link, likes, handleCardClick, onConfirmDelete }) {\r\n    function cardClick() {\r\n        handleCardClick(card);\r\n    }\r\n    return (\r\n        <li className=\"elements__element elements__element_add\" id={id}>\r\n            <button className=\"elements__delete-button\" onClick={onConfirmDelete} type=\"button\" />\r\n            <img\r\n                className=\"elements__image elements__image_add\"\r\n                src={link}\r\n                alt={name}\r\n                onClick={cardClick}\r\n            />\r\n            <h2 className=\"elements__title elements__title_add\">{name}</h2>\r\n            <button className=\"elements__button\" type=\"button\" />\r\n            <p className=\"elements__like-counter\">{likes.length}</p>\r\n        </li>\r\n    );\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport api from \"../utils/api\";\r\nimport Card from './Card.js';\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onConfirmDelete, handleCardClick }) {\r\n  const [userName, setUserName] = React.useState(false);\r\n  const [userDescription, setUserDescription] = React.useState(false);\r\n  const [userAvatar, setUserAvatar] = React.useState(false);\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api.getUserData(function (name, about, avatar) {\r\n      setUserName(name);\r\n      setUserDescription(about);\r\n      setUserAvatar(avatar);\r\n    });\r\n    api\r\n      .getInitialCards()\r\n      .then((res) => {\r\n        setCards(res.reverse());\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__container\">\r\n          <button\r\n            onClick={onEditAvatar}\r\n            type=\"button\"\r\n            className=\"profile__image-button\"\r\n          ></button>\r\n          <img className=\"profile__avatar\" src={userAvatar} alt={userName} />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__title\">{userName}</h1>\r\n          <p className=\"profile__subtitle\">{userDescription}</p>\r\n          <button\r\n            onClick={onEditProfile}\r\n            className=\"profile__edit-button\"\r\n            type=\"button\"\r\n          ></button>\r\n        </div>\r\n        <button\r\n          onClick={onAddPlace}\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n        ></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        <ul className=\"elements__list\">\r\n\r\n          {cards.map((item) =>\r\n            <Card card={item} name={item.name} id={item._id} link={item.link} likes={item.likes} onConfirmDelete={onConfirmDelete} handleCardClick={handleCardClick} />\r\n\r\n          )}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\nexport default Main;\r\n","import React from \"react\";\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>&copy;2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React from \"react\";\nimport PopupWithForm from \"./popupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\n\nfunction App() {\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [isAvatarPopupOpen, setIsAvatarPopupOpen] = React.useState(false);\n  const [isProfilePopupOpen, setIsProfilePopupOpen] = React.useState(false);\n  const [isAddPopupOpen, setIsAddPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [isOpenImage, setIsOpenImage] = React.useState(false);\n\n  function handleCardDeleteClick() {\n    setIsConfirmPopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setIsAddPopupOpen(false);\n    setSelectedCard(false);\n    setIsOpenImage(false);\n    setIsConfirmPopupOpen(false);\n  }\n  function handleCardClick(card) {\n\n    setSelectedCard(card);\n    setIsOpenImage(true);\n  }\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        handleCardClick={handleCardClick}\n        onConfirmDelete={handleCardDeleteClick}\n      />\n\n      <Footer />\n      <PopupWithForm\n        name=\"\"\n        title=\"Редактировать профиль\"\n        isOpen={isProfilePopupOpen}\n        btnText={\"Сохранить\"}\n        close={closeAllPopups}\n      >\n        <label className=\"popup__input-wrapper\">\n          <input\n            className=\"popup__input popup__input_name \"\n            id=\"name\"\n            placeholder=\"Имя\"\n            name=\"name\"\n            tabindex=\"1\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            required\n            type=\"text\"\n          />\n          <span className=\"popup__error\" id=\"name-error\"></span>\n        </label>\n        <label className=\"popup__input-wrapper\">\n          <input\n            className=\"popup__input popup__input_activiti\"\n            id=\"activiti\"\n            placeholder=\"Род занятий\"\n            name=\"about\"\n            tabindex=\"2\"\n            type=\"text\"\n            minLength=\"2\"\n            maxLength=\"200\"\n            required\n          />\n          <span className=\"popup__error\" id=\"activiti-error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"\"\n        title=\"Новое место\"\n        isOpen={isAddPopupOpen}\n        btnText={\"Добавить\"}\n        close={closeAllPopups}\n      >\n        <label className=\"popup__input-wrapper\">\n          <input\n            className=\"popup__input popup__input_place\"\n            id=\"name-card\"\n            placeholder=\"Название\"\n            name=\"name\"\n            tabindex=\"1\"\n            type=\"text\"\n            minLength=\"1\"\n            maxLength=\"30\"\n            required\n          />\n          <span className=\"popup__error\" id=\"name-card-error\"></span>\n        </label>\n        <label className=\"popup__input-wrapper\">\n          <input\n            className=\"popup__input popup__input_link\"\n            id=\"link\"\n            placeholder=\"Ссылка на картинку\"\n            name=\"link\"\n            tabindex=\"2\"\n            type=\"url\"\n            required\n          />\n          <span className=\"popup__error\" id=\"link-error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"\"\n        title=\"Обновить аватар\"\n        isOpen={isAvatarPopupOpen}\n        btnText={\"Сохранить\"}\n        close={closeAllPopups}\n      >\n        <label className=\"popup__input-wrapper\">\n          <input\n            className=\"popup__input popup__input_link-avatar\"\n            id=\"link\"\n            placeholder=\"Ссылка на картинку\"\n            name=\"link\"\n            tabindex=\"2\"\n            type=\"url\"\n            required\n          />\n          <span className=\"popup__error\" id=\"link-error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm\n        name='delete'\n        title=\"Вы уверены?\"\n        isOpen={isConfirmPopupOpen}\n        btnText={\"Да\"}\n        close={closeAllPopups}>\n      </PopupWithForm>\n      {isOpenImage && <ImagePopup close={closeAllPopups} card={selectedCard} />}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Vector.855a8c98.svg\";"],"sourceRoot":""}